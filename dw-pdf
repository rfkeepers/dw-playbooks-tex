#!/usr/bin/env bash
set -euo pipefail

# DW Playbook PDF Generator - Convenience Wrapper
# This script automatically pulls and runs the Docker image for generating DW playbook PDFs

IMAGE_NAME="ghcr.io/rfkeepers/dw-playbooks-tex:latest"

show_help() {
  cat <<'EOF'
DW Playbook PDF Generator

Usage:
  Copy tex template file:
    dw-pdf <thing> <version> template <output.tex>

    Creates a copy of the template tex file into the specified output file.
      - thing:          playbook (p) (maybe more to come in the future)
      - version:        dw1 (1) or dw2 (2)
      - output.tex:     where to save the template

  Generate PDF:
    dw-pdf <thing> <version> <colorscheme> <input.tex> <output.pdf>

    Generates a PDF from the specified input tex file and saves it as the output PDF file.
      - thing:          playbook (p) (maybe more to come in the future)
      - version:        dw1 (1) or dw2 (2)
      - colorscheme:    light (l) or dark (d)
      - input.tex:      source tex file
      - output.pdf:     output PDF file

Examples:
  dw-pdf playbook 2 template new_playbook.tex         # Generate a new template
  dw-pdf playbook 2 d new_playbook.tex dark_book.pdf  # Convert it to a PDF

Options:
  -h, --help    Show this help message
EOF
}

# Handle help flags
if [[ $# -eq 0 ]] || [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
  show_help
  exit 0
fi

# Validate minimum number of arguments
if [[ $# -lt 4 ]]; then
  echo "‚ùå Error: Invalid number of arguments"
  echo ""
  show_help
  exit 1
fi

# Check if Docker is installed
if ! command -v docker &>/dev/null; then
  echo "‚ùå Error: Docker is not installed or not in PATH"
  echo "Please install Docker first: https://docs.docker.com/get-docker/"
  exit 1
fi

# Check if Docker daemon is running
if ! docker info &>/dev/null; then
  echo "‚ùå Error: Docker daemon is not running"
  echo "Please start Docker and try again"
  exit 1
fi

# Pull the latest image (suppress output unless there's an error)
echo "üì¶ Pulling latest DW Playbooks image..."
if ! docker pull "$IMAGE_NAME" 2>/dev/null; then
  echo "‚ö†Ô∏è  Warning: Could not pull latest image, using local version if available"
fi

# Run the Docker container with all arguments passed through
docker run --rm -v "$(pwd):/tex" "$IMAGE_NAME" "$@"
