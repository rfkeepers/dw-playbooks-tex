# DW Playbook Builder
# Usage: just <input.tex> <output.pdf>

IMAGE_NAME := "ghcr.io/ryankeepers/dw-playbooks-tex:latest"

default:
    just -l

# Generate a DW playbook PDF from a tex file using Docker.
# Usage: just gen <version> <mode> <input.tex> <output.pdf>
# - version: 1 or 2 (for DW 1 or DW 2)
# - mode: l or d (for light or dark mode)
# - input.tex: source tex file
# - output.pdf: output PDF file
[group('PDF Generation')]
gen version mode texfile output_pdf:
    docker run --rm -v "$(pwd):/tex" {{IMAGE_NAME}} {{version}} {{mode}} {{texfile}} {{output_pdf}}

# Copy a DW playbook template from the Docker image to your local filesystem.
# Usage: just template <version> <output.tex>
# - version: 1 or 2 (for DW 1 or DW 2 template)
# - output.tex: where to save the template file
[group('PDF Generation')]
template version output_file:
    docker run --rm -v "$(pwd):/tex" {{IMAGE_NAME}} template {{version}} {{output_file}}

# Build the Docker image locally
[group('docker')]
build-image:
    @echo "Building Docker image..."
    docker build -t dw-playbooks-tex .
    @echo "✅ Image built successfully"

# Build and tag the Docker image for registry
[group('docker')]
build-for-registry:
    @echo "Building Docker image for registry..."
    docker build -t {{IMAGE_NAME}} .
    @echo "✅ Image built and tagged for registry"

# Push the Docker image to GitHub Container Registry
[group('docker')]
push-image:
    @echo "Pushing Docker image to registry..."
    docker push {{IMAGE_NAME}}
    @echo "✅ Image pushed successfully"

# Build and push the Docker image to GitHub Container Registry
[group('docker')]
publish:
    @echo "Building and publishing Docker image..."
    docker build -t {{IMAGE_NAME}} .
    @echo "✅ Image built and tagged for registry"
    docker push {{IMAGE_NAME}}
    @echo "✅ Image pushed successfully to GitHub Container Registry"

# Clean auxiliary files generated by LaTeX
[group('cleanup')]
clean texfile:
    rm -f "*.aux" "*.log" "*.out" "*.fls" "*.fdb_latexmk" "*.toc" "*.nav" "*.snm"

# Clean up any spilled .cls/.sty files from development (run after building image)
[group('cleanup')]
clean-spillover:
    @echo "Cleaning up any spilled .cls/.sty files..."
    @rm -f dw1_playbook.cls dw1_playbook.sty dw2_playbook.cls dw2_playbook.sty
    @if [ -d texmf ]; then \
        echo "Removing texmf directory..."; \
        rm -rf texmf; \
    fi
    @echo "✅ Spillover cleanup complete"
